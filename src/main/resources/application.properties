# DataSource settings: set here your own configurations for the database connection.
spring.datasource.url = jdbc:mysql://localhost:3306/springdatabase
spring.datasource.username = root
spring.datasource.password =
spring.datasource.driver-class-name = com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
# Create-Drop will delete table automatically
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Allow Thymeleaf templates to be reloaded at dev time
# On production we should made it: true
spring.thymeleaf.cache: false
server.tomcat.basedir: target/tomcat

# i18n Messages
spring.messages.cache-seconds = 3600
spring.messages.basename = i18n/messages

# Specify the level for spring boot and hibernate's loggers
logging.level.org.springframework.web = DEBUG
logging.level.org.hibernate = ERROR

# Level for loggers on classes inside the root package "com.aapog" (and its sub-packages)
# Available levels are: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.com.aapog = DEBUG

# Specify log file
logging.file = ${catalina.home}/logs/myApp.log

# Switch off the banner
spring.main.banner-mode = off

# Security
logging.level.org.springframework.security: INFO

# Server Port
server.port= 8888